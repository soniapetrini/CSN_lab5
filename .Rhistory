df <- data.frame("tpr"=NULL,"expansion"=NULL,"conductance"=NULL,"modularity"= NULL)
df <- rbind(df,measures1,measures2,measures3,measures4,measures5,measures7,measures8,measures9)
df$algorithm <- algorithms
df$clusters <- c(n_clus_1,n_clus_2,n_clus_3,n_clus_4,n_clus_5,n_clus_7,n_clus_8,n_clus_9)
df$time <- c(time_elapsed1,time_elapsed2,time_elapsed3,time_elapsed4,time_elapsed5,
time_elapsed7,time_elapsed8,time_elapsed9)
return(df)
}
options(warn = defaultW)
### build from complete graphs
comm_sizes <- c(94,53,25,62)
#full_net <- merge_communities_full(comm_sizes,difficulty = 100)
#plot(full_net)
#save(full_net,file="full_net.rda")
## build from ER graphs
comm_sizes <- c(94,53,25,62)
ERp <- 0.6
ER_net <- merge_communities_ER(comm_sizes,ERp,difficulty = 100)
plot(ER_net)
## get results
nets <- list("macaque_net"=macaque_net,"rfid_net"=rfid_net,
"full_net"=full_net,"ER_net"=ER_net)
# summary table
sum_tab <- data.frame(matrix(ncol = 5, nrow = 0))
for (i in 1:length(nets)){
net_stats <- lapply(nets[i],FUN=get_stats)
net_stats <- append(unlist(net_stats),names(nets[i]))
sum_tab <- rbind(sum_tab,net_stats)
}
colnames(sum_tab) <- c("N","E","E_dens","k_mean","network")
for (i in 1:length(nets)) {
net <- nets[[i]]
net_name <- names(nets[i])
print(net_name)
df <- find_communities(net)
print(xtable(df))
write.csv(df, paste(net_name,"df.csv",sep = "_"))
}
#rfid_df <- find_communities(rfid_net)
df <- read.csv("macaque_net_df.csv")
df[,-c(1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
df[,-c(1,ncol(df)-1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
df <- read.csv("full_net_df.csv")
df[,-c(1,ncol(df)-1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
full_net <- merge_communities_full(comm_sizes,difficulty = 100)
nets <- list("full_net"=full_net)
for (i in 1:length(nets)) {
net <- nets[[i]]
net_name <- names(nets[i])
print(net_name)
df <- find_communities(net)
print(xtable(df))
write.csv(df, paste(net_name,"df.csv",sep = "_"))
}
df <- read.csv("full_net_df.csv")
df[,-c(1,ncol(df)-1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
df <- read.csv("full_net_df.csv")
setEPS()
postscript("full_net_measures.eps")
df[,-c(1,ncol(df)-1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
dev.off()
plot(rfid_net)
graph <- full_net
graph <- as.undirected(graph, mode='collapse')
graph <- simplify(graph)
vertex_attr(graph) <- list(name=V(graph))
communities <- fastgreedy.community(graph)
plot(communities,graph)
df <- read.csv("ER_net_df.csv")
df[,-c(1,ncol(df)-1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
setEPS()
postscript("ER_net_measures.eps")
df[,-c(1,ncol(df)-1,ncol(df))] %>% pivot_longer(-algorithm, names_to = "Var", values_to = "val") %>%
ggplot(aes(x=Var,y=val,fill=algorithm)) +
geom_bar(stat="identity",position="dodge") +
scale_fill_discrete(name="algorithm") +
xlab("Measure")+ylab("Value")
dev.off()
sum_tab
nets <- list("macaque_net"=macaque_net,"rfid_net"=rfid_net,
"full_net"=full_net,"ER_net"=ER_net)
timings <- list()
for (i in 1:length(nets)) {
print(paste("iteration:",i))
net <- nets[[i]]
net_name <- names(nets[i])
print(net_name)
df <- find_communities(net)
timings[[i]] <- as.numeric(df$time)
i <- i + 1
}
timings_results <- list("macaque_net"=NULL,"rfid_net"=NULL,"full_net"=NULL,ER_net=NULL)
for (i in 1:length(algorithms)) {
timings_results[[i]] <- as.numeric(lapply(timings, `[[`, i))
}
timings_results
find_communities(karate_net)
df <- find_communities(karate_net)
df
plot(karate_net)
data.frame(timings_results)
timings_results
timings
timings_results <- list("macaque_net"=NULL,"rfid_net"=NULL,"full_net"=NULL,ER_net=NULL)
for (i in 1:length(nets)) {
timings_results[[i]] <- as.numeric(lapply(timings, `[[`, i))
}
timings_results
timings_results <- list("macaque_net"=NULL,"rfid_net"=NULL,"full_net"=NULL,ER_net=NULL)
for (i in 1:length(algorithms)) {
timings_results[[i]] <- as.numeric(lapply(timings, `[[`, i))
}
timings_results
timings
data.frame(timings)
timings
data.frame(unlist(timings))
do.call(rbind,timings)
df_time <- do.call(rbind,timings)
colnames(df_time) <- algorithms
df_time
timings2 <- list()
for (i in 1:length(nets)) {
print(paste("iteration:",i))
net <- nets[[i]]
net_name <- names(nets[i])
df <- find_communities(net)
new_row <- append(as.numeric(df$time),net_name)
timings2[[i]] <- as.numeric(new_row)
i <- i + 1
}
i <- 1
print(paste("iteration:",i))
net <- nets[[i]]
net_name <- names(nets[i])
df <- find_communities(net)
new_row <- append(as.numeric(df$time),net_name)
new_row
timings2[[i]] <- new_row
timings2
names(nets)
df_time <- do.call(rbind,timings)
colnames(df_time) <- algorithms
df_time$network <- names(nets)
df_time
df_time <- do.call(rbind,timings)
colnames(df_time) <- algorithms
df_time$network <- unlist(names(nets))
df_time
df_time <- do.call(rbind,timings)
colnames(df_time) <- algorithms
df_time
unlist(names(nets))
(names(nets))
list(names(nets))
df_time$network <- list(names(nets))
df_time
df_time <- data.frame(do.call(rbind,timings))
colnames(df_time) <- algorithms
df_time$network <- list(names(nets))
df_time
df_time <- data.frame(do.call(rbind,timings))
colnames(df_time) <- algorithms
df_time$network <- names(nets)
df_time
df_time %>%
melt(id.vars="network") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(3,8))
df_time %>%
melt(id.vars="network") %>%
ggplot(aes( x=network, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(3,8))
df_time %>%
melt(id.vars="network") %>%
ggplot(aes( x=network, y=value, colour=variable, group=variable )) +
geom_line(size=1)
df_time %>%
melt(id.vars="network") %>%
ggplot(data, aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity")
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity")
nets <- list("macaque_net"=macaque_net,"Hospital_net"=rfid_net,
"full_net"=full_net,"ER_net"=ER_net)
df_time <- data.frame(do.call(rbind,timings))
colnames(df_time) <- algorithms
df_time$network <- names(nets)
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity")
guides(colour=guide_legend(nrow=2)) +
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
guides(colour=guide_legend(nrow=2))
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
guides(fill=guide_legend(nrow=2))
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("Relative elapsed time") +
guides(fill=guide_legend(nrow=2))
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("Relative elapsed time") +
guides(fill=guide_legend(nrow=2))
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("Relative elapsed time") +
guides(fill=guide_legend(nrow=2))
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
theme(text = element_text(size = 15),legend.position="bottom",legend.title = element_blank()) +
ylab("Relative elapsed time") +
guides(fill=guide_legend(nrow=2))
setEPS()
postscript("elapsed_time.eps")
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
theme(text = element_text(size = 15),legend.position="bottom",legend.title = element_blank()) +
ylab("Relative elapsed time") +
guides(fill=guide_legend(nrow=2))
dev.off()
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
theme(text = element_text(size = 15)) +
ylab("Relative elapsed time")
setEPS()
postscript("elapsed_time.eps")
df_time %>%
melt(id.vars="network") %>%
ggplot(aes(fill=variable, y=value, x=network)) +
geom_bar(position="fill", stat="identity") +
theme(text = element_text(size = 15)) +
ylab("Relative elapsed time")
dev.off()
df_time
graph <- macaque_net
graph <- as.undirected(graph, mode='collapse')
graph <- simplify(graph)
vertex_attr(graph) <- list(name=V(graph))
communities <- label.propagation.community(graph)
plot(communities,graph)
graph <- plot(macaque_net)
df
df <- find_communities(macaque_net)
df
cor(df$modularity,df$expansion)
cor(df$conductance,df$expansion)
df <- find_communities(rfid_net)
cor(df$conductance,df$expansion)
defaultW <- getOption("warn")
options(warn = -1)
comm_sizes <- c(60,47,35,30)
ERp <- 0.5
est_clusters_ER <- list()
est_clusters_full <- list()
i <- 1
difficulties <- seq(10,100,5)
for (d in difficulties) {
print(paste("ieration:",d))
graph_ER <- merge_communities_ER(comm_sizes,ERp , difficulty = d)
graph_full <- merge_communities_full(comm_sizes, difficulty = d)
df_ER <- find_communities(graph_ER)
df_full <- find_communities(graph_full)
est_clusters_ER[[i]] <- df_ER$clusters
est_clusters_full[[i]] <- df_full$clusters
i <- i + 1
}
options(warn = defaultW)
results_ER <- list("edge.betweenness"=NULL,"fastgreedy"=NULL,"label.propagation"=NULL,"leading.eigenvector"=NULL,
"multilevel"=NULL,"spinglass"=NULL,"walktrap"=NULL,"infomap"=NULL)
for (i in 1:length(algorithms)) {
results_ER[[i]] <- as.numeric(lapply(est_clusters_ER, `[[`, i))
}
results_full <- list("edge.betweenness"=NULL,"fastgreedy"=NULL,"label.propagation"=NULL,"leading.eigenvector"=NULL,
"multilevel"=NULL,"spinglass"=NULL,"walktrap"=NULL,"infomap"=NULL)
for (i in 1:length(algorithms)) {
results_full[[i]] <- as.numeric(lapply(est_clusters_full, `[[`, i))
}
#postscript("est_clusters_1:4_full.eps")
data.frame(results_full) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(3,8))
#postscript("est_clusters_5:8_full.eps")
data.frame(results_full) %>%  select(5:8) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
theme(legend.text=element_text(size=18)) +
ylab("estimated number of clusters") +
ylim(c(3,8))
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(3,8))
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
#postscript("est_clusters_5:8_full.eps")
data.frame(results_ER) %>%  select(5:8) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
theme(legend.text=element_text(size=18)) +
ylab("estimated number of clusters") +
ylim(c(2,8))
data.frame(results_ER) %>%  select(5:8) %>% mutate(difficulty=difficulties,mean=mean())
#postscript("est_clusters_5:8_full.eps")
data.frame(results_ER) %>%  select(5:8) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
theme(legend.text=element_text(size=18)) +
ylab("estimated number of clusters") +
ylim(c(2,8))
load("ER_difficulties_results_200.rda")
#postscript("est_clusters_1:4_full.eps")
data.frame(ER_difficulties_results_200) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
results_ER <- load("ER_difficulties_results_200.rda")
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
data.frame(results_ER)
load("ER_difficulties_results_200.rda")
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
file.info("ER_difficulties_results_200.rda")
getwd()
s <- load("ER_difficulties_results_200.rda")
load("ER_difficulties_results_200.rda")
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
results_ER
difficulties <- seq(10,200,5)
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(yintercept=4, linetype="dashed",
color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
results_ER
data.frame(results_ER)
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
summarise(across(edge.betweenness:infomap, mean))
data.frame(results_ER) %>%  select(1:4)
data.frame(results_ER) %>%  select(1:4) %>% mutate(difficulty=difficulties) %>%
summarise(across(edge.betweenness:leading.eigenvector, mean))
#postscript("est_clusters_1:4_full.eps")
data.frame(results_ER) %>%  select(1:4) %>%
mutate(difficulty = difficulties, mean = summarise(across(edge.betweenness:leading.eigenvector, mean))) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_line(y=mean,x=difficulty,size=1) +
geom_hline(yintercept=4, linetype="dashed", color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
#postscript("est_clusters_1:4_full.eps")
df_diff <- data.frame(results_ER) %>%  select(1:4)
mean <- df_diff %>% summarise(across(edge.betweenness:leading.eigenvector, mean))
mutate(difficulty = difficulties) %>%
melt(id.vars="difficulty") %>%
ggplot(aes( x=difficulty, y=value, colour=variable, group=variable )) +
geom_line(size=1) +
geom_hline(y=mean,size=1) +
geom_hline(yintercept=4, linetype="dashed", color = "red", size=0.5) +
theme(text = element_text(size = 18),legend.position="bottom",legend.title = element_blank()) +
ylab("estimated number of clusters") +
guides(colour=guide_legend(nrow=2)) +
ylim(c(2,8))
#postscript("est_clusters_1:4_full.eps")
df_diff <- data.frame(results_ER) %>%  select(1:4)
mean <- df_diff %>% summarise(across(edge.betweenness:leading.eigenvector, mean))
50*5
graph <- ER_net
graph <- as.undirected(graph, mode='collapse')
graph <- simplify(graph)
vertex_attr(graph) <- list(name=V(graph))
communities <- walktrap.community(graph)
plot(communities,graph)
setEPS()
postscript("best_ER.eps")
plot(communities,graph)
communities <- fastgreedy.community(graph)
plot(communities,graph)
setEPS()
postscript("best_ER.eps")
plot(communities,graph)
